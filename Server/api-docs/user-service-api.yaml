openapi: 3.0.3
info:
  title: User Service API
  description: API for managing user accounts and profiles
  version: 1.0.0
  contact:
    name: User Service Team

servers:
  - url: http://localhost:8081
    description: Local development server

tags:
  - name: User Management
    description: Operations related to user management

paths:
  /user:
    post:
      tags:
        - User Management
      summary: Create a new user
      description: Creates a new user in the system
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

    get:
      tags:
        - User Management
      summary: Get all users
      description: Retrieves a list of all users
      operationId: getAllUsers
      responses:
        '200':
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal server error

  /user/{id}:
    get:
      tags:
        - User Management
      summary: Get user by ID
      description: Retrieves a specific user by their ID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Internal server error

    put:
      tags:
        - User Management
      summary: Update user
      description: Updates an existing user's information
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '400':
          description: Invalid input
        '500':
          description: Internal server error

    delete:
      tags:
        - User Management
      summary: Delete user
      description: Deletes a user from the system
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found
        '500':
          description: Internal server error

  /user/username/{username}:
    get:
      tags:
        - User Management
      summary: Get user by username
      description: Retrieves a user by their username
      operationId: getUserByUsername
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: User found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: User not found
        '500':
          description: Internal server error

  /user/register:
    post:
      tags:
        - User Management
      summary: Register a new user
      description: Registers a new user account
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid registration data
        '409':
          description: User already exists
        '500':
          description: Internal server error

  /user/verify:
    get:
      tags:
        - User Management
      summary: Verify user credentials
      description: Verifies user email and password
      operationId: verifyUser
      parameters:
        - name: email
          in: query
          required: true
          description: User email
          schema:
            type: string
            format: email
        - name: password
          in: query
          required: true
          description: User password
          schema:
            type: string
            format: password
      responses:
        '200':
          description: Verification successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Invalid credentials
        '500':
          description: Internal server error

components:
  schemas:
    User:
      type: object
      required:
        - username
        - email
        - password
      properties:
        id:
          type: integer
          format: int64
          description: User ID
        username:
          type: string
          description: Unique username
        fullName:
          type: string
          description: Full name of the user
        email:
          type: string
          format: email
          description: User email address
        password:
          type: string
          format: password
          description: User password
        role:
          type: string
          description: User role
          default: USER
        createdAt:
          type: string
          format: date-time
          description: Account creation timestamp
        dp:
          type: string
          description: Display picture URL
          nullable: true
        gender:
          type: string
          description: User gender
          nullable: true
        age:
          type: string
          description: User age
          nullable: true
        weight:
          type: string
          description: User weight
          nullable: true
        height:
          type: string
          description: User height
          nullable: true

    RegisterRequest:
      type: object
      required:
        - username
        - password
        - email
        - fullName
      properties:
        username:
          type: string
          description: Desired username
        password:
          type: string
          format: password
          description: User password
        fullName:
          type: string
          description: Full name
        email:
          type: string
          format: email
          description: Email address

    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the operation was successful
        message:
          type: string
          description: Response message
        data:
          type: object
          description: Response data
